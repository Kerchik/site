{"version":3,"sources":["assets/images/user.png","components/Users/Users.module.css","assets/images/loading.svg","components/Navbar/Navbar.module.css","components/common/FormsControl/FormsControl.jsx","components/Header/Header.jsx","redux/authReducer.js","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/common/paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","utils/objects-helpers.js","redux/usersReducer.js","redux/usersSelectors.js","components/Users/UsersContainer.jsx","components/Login/Login.jsx","redux/appReducer.js","redux/sidebarReducer.js","redux/reduxStore.js","hoc/withSuspense.js","App.jsx","serviceWorker.js","index.js","components/common/preloader/PreLoader.js","components/common/FormsControl/FormsControl.module.css","components/common/paginator/Paginator.module.css","redux/profileReducer.js","utils/validators/validators.js","api/api.js","components/Header/Header.module.css","redux/dialogsReducer.js"],"names":["module","exports","__webpack_require__","p","userPhoto","nav","item","activeLink","FormControl","_ref","input","_ref$meta","meta","touched","error","children","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","formControl","Textarea","props","restProps","child","Object","C_Users_PC_Desktop_React_my_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","Input","createField","placeholder","name","validators","component","arguments","length","undefined","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","validate","Header","react_default","s","header","src","loginBlock","isAuth","login","onClick","logout","react_router_dom","to","initialState","userId","email","setAuthUserData","type","payload","getAuthUserData","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","_response$data$data","id","_login","wrap","_context","prev","next","authAPI","me","sent","data","resultCode","stop","_x","apply","this","authReducer","state","action","objectSpread","HeaderContainer","components_Header_Header","React","Component","connect","auth","_ref3","_callee3","_context3","_x3","Navbar","activeClassName","Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","filter","map","cn","defineProperty","selectedPage","pageNumber","key","e","User","user","followingInProgress","follow","unfollow","photos","small","followed","disabled","some","status","Users","totalUsersCount","objectWithoutProperties","paginator_Paginator","users","u","Users_User","updateObjectInArray","items","itemId","objPropName","newObjProps","isFetching","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","_ref2","_callee2","apiMethod","actionCreator","_context2","_x2","_x4","_x5","usersReducer","toConsumableArray","count","concat","getUsers","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","_this","requestUsers","_this$props","Fragment","PreLoader","components_Users_Users","compose","usersAPI","bind","_x6","_ref4","_callee4","_context4","_x7","page","totalCount","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","style","formSummaryError","password","rememberMe","message","messages","stopSubmit","_error","react_router","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","withSuspense","Suspense","fallback","DialogsContainer","lazy","then","ProfileContainer","App","initializeApp","Header_HeaderContainer","components_Navbar_Navbar","path","render","Users_UsersContainer","components_Login_Login","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","es","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","preLoader","backgroundColor","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","C_Users_PC_Desktop_React_my_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_PC_Desktop_React_my_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","getProfile","getStatus","profileAPI","updateStatus","savePhoto","file","saveProfile","_ref5","_callee5","getState","_context5","abrupt","reject","newPost","C_Users_PC_Desktop_React_my_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","C_Users_PC_Desktop_React_my_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","d","__webpack_exports__","maxLengthCreator","value","maxLength","axios__WEBPACK_IMPORTED_MODULE_0__","instance","axios","withCredentials","headers","API-KEY","baseURL","console","log","get","post","delete","warn","put","photoFile","FormData","append","Content-Type","dialogs","sendMessageCreator","newMessageBody","body","C_Users_PC_Desktop_React_my_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","C_Users_PC_Desktop_React_my_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/main.86b580fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.bb82b771.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__33si7\"};","module.exports = __webpack_public_path__ + \"static/media/loading.f6076e2c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2txY0\",\"item\":\"Navbar_item__1xdoD\",\"activeLink\":\"Navbar_activeLink__27taT\"};","import React from 'react';\r\nimport styles  from './FormsControl.module.css';\r\nimport {Field} from \"redux-form\"\r\n\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n   const {input, meta, child, ...restProps} = props;\r\n   return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field validate={validators} \r\n        placeholder={placeholder} \r\n        name={name} \r\n        component={component}\r\n        {...props} /> {text}\r\n    </div>\r\n)","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n        <img src=\"https://png.pngtree.com/element_pic/00/16/07/115783931601b5c.jpg\"/>\r\n        \r\n        <div className={s.loginBlock}>\r\n            {props.isAuth \r\n                ? <div>{props.login} <button onClick={props.logout}>Log out</button></div> \r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n            \r\n        </div>\r\n      </header>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;","import {authAPI} from '../api/api';\r\nimport {stopSubmit} from 'redux-form';\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n}\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: \r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        \r\n        \r\n        default: \r\n            return state;\r\n    }\r\n    \r\n}\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}}) \r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n        \r\n    if (response.data.resultCode === 0 ) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email,password,rememberMe,)\r\n        \r\n    if (response.data.resultCode === 0 ) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'some error'\r\n        dispatch(stopSubmit('login',{_error: message}));\r\n    }\r\n        \r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n        \r\n    if (response.data.resultCode === 0 ) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n        \r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport * as axios from 'axios';\r\nimport Header from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../../redux/authReducer';\r\nimport {authAPI} from '../../api/api';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    \r\n    render() {\r\n    return <Header {...this.props}/>\r\n    \r\n}\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps,{logout})(HeaderContainer);","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a>News</a>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a>Music</a>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a>Settings</a>\r\n        </div>\r\n        </nav>\r\n    )\r\n} \r\n\r\nexport default Navbar;","import React,{useState} from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n        let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n        let pages = [];\r\n        for (let i=1;i <= pagesCount;i++) {\r\n            pages.push(i);\r\n        }\r\n\r\n        let portionCount = Math.ceil(pagesCount / portionSize);\r\n        let [portionNumber, setPortionNumber] = useState(1);\r\n        let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n        let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    \r\n    return <div className={styles.paginator}>\r\n              {portionNumber > 1 && \r\n              <button onClick={() => {setPortionNumber(portionNumber - 1)}}>PREV </button> }\r\n               \r\n              {pages\r\n              .filter(p => p >= leftPortionPageNumber && p<= rightPortionPageNumber)\r\n              .map((p) => {\r\n                  return <span className={cn({\r\n                      [styles.selectedPage]: currentPage === p   \r\n                  }, styles.pageNumber)}\r\n                  key={p}\r\n                  onClick={(e) => {\r\n                      onPageChanged(p);\r\n                  }}>{p}</span>\r\n              })}\r\n              {portionCount > portionNumber &&\r\n              <button onClick={() => {setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n           </div>\r\n            \r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport { NavLink} from 'react-router-dom';\r\nimport * as axios from 'axios';\r\nimport {usersAPI} from '../../api/api';\r\nimport Paginator from \"../common/paginator/Paginator\";\r\n\r\nlet User = ({user, followingInProgress, follow, unfollow}) => {\r\n    return (\r\n            <div>\r\n            \r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                            <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed \r\n                            ? <button disabled={followingInProgress.some(id => id === user.id)} \r\n                            onClick={() => { unfollow(user.id) }}>\r\n                            Unfollow</button> \r\n                            : <button disabled={followingInProgress.some(id => id === user.id)} \r\n                            onClick={() => { follow(user.id) }}>\r\n                            Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"u.location.country\"}</div>\r\n                        <div>{\"u.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n            \r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport cn from \"classnames\";\r\n\r\nlet Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, ...props}) => {\r\n    return <div>\r\n           <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n           totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n           <div>\r\n            {\r\n            props.users.map(u => <User \r\n                key={u.id} \r\n                user={u} \r\n                followingInProgress={props.followingInProgress}\r\n                follow={props.follow} \r\n                unfollow={props.unfollow} \r\n            />\r\n            )\r\n            }\r\n            </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps} \r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from '../api/api'\r\nimport {updateObjectInArray} from \"../utils/objects-helpers\"\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize : 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: \r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: [ ...action.users]}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching \r\n                ? [...state.followingInProgress, action.userId]\r\n                : [state.followingInProgress.filter(id => id != action.userId)]\r\n            }\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n    \r\n}\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId}) \r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId}) \r\nexport const setUsers = (users) => ({type: SET_USERS, users}) \r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage}) \r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount}) \r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching}) \r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId}) \r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        let apiMethod =  usersAPI.follow.bind(usersAPI)\r\n        let actionCreator = followSuccess;\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        let apiMethod =  usersAPI.unfollow.bind(usersAPI)\r\n        let actionCreator = unfollowSuccess;\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {createSelector} from 'reselect'\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n})\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport Users from './Users';\r\nimport {connect} from 'react-redux';\r\nimport {follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching, toggleFollowingProgress, requestUsers} from '../../redux/usersReducer';\r\nimport PreLoader from '../common/preloader/PreLoader';\r\nimport {compose} from 'redux';\r\nimport {getPageSize, getUsers, getCurrentPage, getTotalUsersCount, getIsFetching, getFollowingInProgress} from '../../redux/usersSelectors'\r\n\r\nclass UsersContainer extends React.Component {\r\n    \r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n    \r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    \r\n    render() {\r\n        \r\n        return <>\r\n            {this.props.isFetching ? \r\n             <PreLoader /> : null}\r\n            <Users  totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    followingInProgress= {this.props.followingInProgress}\r\n        \r\n        \r\n            />\r\n        </>\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    \r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    \r\n    connect(mapStateToProps, {follow,unfollow,setCurrentPage,toggleFollowingProgress,requestUsers})\r\n)(UsersContainer)","import React from 'react';\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport {Input} from '../common/FormsControl/FormsControl'\r\nimport {required} from '../../utils/validators/validators'\r\nimport {connect} from 'react-redux'\r\nimport {login} from '../../redux/authReducer'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {createField} from '../common/FormsControl/FormsControl'\r\nimport style from '../common/FormsControl/FormsControl.module.css'\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n               {createField(\"Email\", \"email\", [required], Input)}\r\n               {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n               {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n            \r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n        )\r\n    \r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);","import {authAPI} from '../api/api';\r\nimport {stopSubmit} from 'redux-form';\r\nimport {getAuthUserData} from './authReducer';\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: \r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        \r\n        \r\n        default: \r\n            return state;\r\n    }\r\n    \r\n}\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS}) \r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n    \r\n}\r\n\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    \r\n    return state; \r\n}\r\n\r\nexport default sidebarReducer;","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport profileReducer from './profileReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport sidebarReducer from './sidebarReducer';\r\nimport usersReducer from './usersReducer';\r\nimport authReducer from './authReducer';\r\nimport appReducer from './appReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\nexport default store;","import React from 'react'\r\nimport PreLoader from '../components/common/preloader/PreLoader'\r\n\r\nexport const withSuspense = (Component) => {\r\n    \r\n\r\n    return (props) => {\r\n        return <React.Suspense fallback={<PreLoader />}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    }\r\n}","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport './App.css';\nimport HeaderContainer from  './components/Header/HeaderContainer'\nimport Navbar from  './components/Navbar/Navbar'\nimport UsersContainer from  './components/Users/UsersContainer'\nimport Login from './components/Login/Login'\nimport {initializeApp} from './redux/appReducer'\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport {compose} from 'redux';\nimport PreLoader from './components/common/preloader/PreLoader';\nimport store from './redux/reduxStore'\nimport {HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {withSuspense} from './hoc/withSuspense';\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n  render() {\n      if (!this.props.initialized) {\n        return <PreLoader />\n      }\n      return (\n\n            <div className=\"app-wrapper\">\n                <HeaderContainer />\n                <Navbar />\n                <div className='app-wrapper-content'>\n                    <Route path=\"/dialogs\"\n                     render={withSuspense(DialogsContainer)}/>\n                    <Route path=\"/profile/:userId?\" \n                     render={withSuspense(ProfileContainer)}/>\n                    <Route path=\"/users\" \n                     render={() => <UsersContainer />}/>\n                    <Route path=\"/login\" \n                     render={() => <Login />}/>\n\n                </div>\n             </div>\n\n      );\n  }\n};\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer =  compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n    \nconst SamuraiJSApp = (props) => {\n  return <HashRouter>\n    <Provider store={store}>\n        <AppContainer />\n    </Provider>\n  </HashRouter>\n}\nexport default SamuraiJSApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/reduxStore'\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport SamuraiJSApp from \"./App\"\n\nReactDOM.render(\n    <SamuraiJSApp />,\n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import preLoader from '../../../assets/images/loading.svg';\r\nimport React from 'react';\r\n\r\n\r\nlet PreLoader = (props) => {\r\n    return <div>\r\n                <img src={preLoader} style={{backgroundColor: 'white'}} /> \r\n            </div>\r\n}\r\n\r\nexport default PreLoader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__2eGY8\",\"error\":\"FormsControl_error__TERWz\",\"formSummaryError\":\"FormsControl_formSummaryError__jNgAZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__uAaO4\",\"pageNumber\":\"Paginator_pageNumber__3oMve\",\"selectedPage\":\"Paginator_selectedPage__2XWL-\"};","import {usersAPI, profileAPI} from '../api/api'\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nconst ADD_POST = 'ADD-POST';\r\n\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE ';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SAVE_PHOTOS_SUCCESS = 'SAVE_PHOTOS_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'Its my first post', likesCount: 5},\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: '',\r\n            };\r\n            \r\n          \r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SAVE_PHOTOS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n    \r\n}\r\nexport const addPostActionCreator = (newPostText) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTOS_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n     let response = await usersAPI.getProfile(userId)\r\n     dispatch(setUserProfile(response.data));\r\n        \r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n     let response = await profileAPI.getStatus(userId)\r\n     dispatch(setStatus(response.data));\r\n        \r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n     let response = await profileAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n        \r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file)\r\n       if (response.data.resultCode === 0) {\r\n           dispatch(savePhotoSuccess(response.data.data.photos));\r\n       }\r\n       \r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    const response = await profileAPI.saveProfile(profile)\r\n       if (response.data.resultCode === 0) {\r\n           dispatch(getUserProfile(userId))\r\n       } else {\r\n            //let message = response.data.messages[0]\r\n            dispatch(stopSubmit('editProfile',{_error:response.data.messages[0]}));\r\n            return Promise.reject(response.data.messages[0])\r\n       }\r\n       \r\n}\r\n\r\n\r\nexport default profileReducer;","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import * as axios from \"axios\"; \r\nimport { savePhotoSuccess } from \"../redux/profileReducer\";\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"2ef20370-8037-4b6c-bd91-6c68962a182a\"\r\n    },\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        console.log(\"asdasd\")\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => response.data)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileAPI')\r\n        return profileAPI.getProfile(userId);\r\n                \r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n                \r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile);\r\n\r\n    }\r\n}\r\nexport const authAPI = {\r\n   me() {\r\n       return instance.get(`auth/me`);\r\n   },\r\n   login(email, password, rememberMe = false) {\r\n       return instance.post('auth/login', {email, password, rememberMe});\r\n   },\r\n   logout() {\r\n       return instance.delete('auth/login');\r\n   }\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3CtPF\",\"loginBlock\":\"Header_loginBlock__3l23B\"};","const SEND_MESSAGE = 'SEND-MESSAGE';\r\nlet initialState = {\r\n   messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How are you'},\r\n        {id: 3, message: 'Chi da'},\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Dmitriy'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Victor'},\r\n        {id: 5, name: 'Valera'}\r\n    ],\r\n    \r\n}\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 5, message: body}]\r\n                \r\n            };\r\n            \r\n    }\r\n    \r\n    return state; \r\n}\r\nexport const sendMessageCreator = (newMessageBody) => {\r\n    \r\n    return {\r\n        type: SEND_MESSAGE,\r\n        newMessageBody\r\n    }\r\n}\r\n\r\n\r\nexport default dialogsReducer;"],"sourceRoot":""}