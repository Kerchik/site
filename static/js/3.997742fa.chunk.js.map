{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","Object","C_Users_PC_Desktop_React_my_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_PC_Desktop_React_my_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_PC_Desktop_React_my_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","C_Users_PC_Desktop_React_my_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_PC_Desktop_React_my_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","React","connect","module","exports","descriptionBlock","mainPhoto","contact","postsBlock","posts","item","Post","react_default","className","s","src","alt","message","likesCount","MyPosts","memo","postsElements","map","p","MyPosts_Post_Post","id","createRef","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","MyPostsContainer","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileDataFormReduxForm","_ref","profile","error","style","formSummaryError","createField","Input","type","keys","contacts","ProfileData","_ref2","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contact","contactTitle","contactValue","Contact","_ref3","ProfileInfo","savePhoto","saveProfile","PreLoader","photos","large","userPhoto","target","files","length","ProfileInfo_ProfileDataForm","initialValues","formData","then","ProfileInfo_ProfileData","ProfileInfo_ProfileStatusWithHooks","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","components_Profile_Profile","assign","compose","withRouter"],"mappings":"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","file":"static/js/3.997742fa.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />\r\n            \r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    \r\n    \r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1UiMl\",\"mainPhoto\":\"ProfileInfo_mainPhoto__MCWZv\",\"contact\":\"ProfileInfo_contact__xYolP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__OPhx6\",\"posts\":\"MyPosts_posts__1Sk5I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1_1_H\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n       <div className={s.item}>\r\n            <img src=\"https://i1.i.ua/prikol/pic/4/7/418574.jpg\" alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n \r\n    )\r\n}\r\n \r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post.jsx';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from '../../../redux/profileReducer';\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport {required, maxLengthCreator} from '../../../utils/validators/validators'\r\nimport {Textarea} from '../../common/FormsControl/FormsControl'\r\n\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n     let postsElements =\r\n         props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id}/>);\r\n\r\n     let newPostElement = React.createRef();\r\n\r\n\r\n     let onAddPost = (values) => {\r\n             props.addPost(values.newPostText);\r\n         };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\nconst maxLength10 = maxLengthCreator(10);\r\nlet AddNewPostForm = (props) => {\r\n   return (\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} validate={[required, maxLength10]} placeholder=\"Write something\"/>\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n   )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addPostActionCreator} from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    \r\n    return {\r\n        \r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContainer;","import React,{useState, useEffect} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    \r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status] )\r\n    \r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <b>Status: </b><span onDoubleClick={activateEditMode}>{status || '---'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value,\r\n        });\r\n        \r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n        console.log('c');\r\n    }\r\n\r\n    render() {\r\n    return (\r\n        <div>\r\n            {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick= {this.activateEditMode}>{!this.props.status ? '---' : this.props.status}</span>\r\n                </div>\r\n            }\r\n            {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\"\r\nimport {createField, Input, Textarea } from \"../../common/FormsControl/FormsControl\"\r\nimport {reduxForm} from 'redux-form';\r\nimport s from './ProfileInfo.module.css'\r\nimport style from '../../common/FormsControl/FormsControl.module.css'\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><button>Save</button></div>\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>Full name:</b> {createField(\"Full name\", \"fullName\", [], Input)}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job:</b>\r\n                {createField(\"\", \"lookingForAJob\", [], Input, {type: 'checkbox'})}\r\n            </div>\r\n            <div>\r\n                    <b>My professional skills</b>\r\n                    {createField(\"\", \"lookingForAJobDescription\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>About me: </b> {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\r\n                    return <div key={key} className={s.contact}>\r\n                        <b>{key}:   </b>{createField(key, \"contacts.\" + key, [], Input)}\r\n                    </div>\r\n                })} \r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'editProfile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React,{useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport PreLoader from '../../common/preloader/PreLoader'\r\nimport userPhoto from '../../../assets/images/user.png'\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\nimport ProfileDataForm from './ProfileDataForm'\r\n\r\n\r\nconst ProfileInfo = ({profile, updateStatus, status, isOwner, savePhoto, saveProfile}) => {\r\n\r\n   let [editMode,setEditMode] = useState(false)\r\n\r\n\r\n   if (!profile) {\r\n       return <PreLoader />\r\n   }\r\n\r\n   const onMainPhotoSelected = (e) => {\r\n       if (e.target.files.length) {\r\n           savePhoto(e.target.files[0])\r\n       }\r\n   }\r\n\r\n   const onSubmit = (formData) => {\r\n       saveProfile(formData)\r\n       .then(() => {\r\n        setEditMode(false)    \r\n       })\r\n       //setEditMode(false)\r\n       //setEditMode(false)\r\n\r\n   }\r\n    \r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n               <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n               {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                \r\n                {editMode ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/> : <ProfileData goToEditMode={() => {setEditMode(true)}} profile={profile} isOwner={isOwner}/>}\r\n                \r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div>\r\n            {isOwner && <div>\r\n                <button onClick={goToEditMode}>Edit</button>\r\n            </div>}\r\n            <div>\r\n                <b>Full name:</b> {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {profile.lookingForAJob && \r\n            <div>\r\n                    <b>My professional skills</b> {profile.lookingForAJobDescription}   \r\n            </div>\r\n            }\r\n            <div>\r\n                <b>About me: </b> {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div className={s.contact}>\r\n            <b>{contactTitle}</b>: {contactValue}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from './MyPosts/MyPosts.jsx'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer.jsx'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo.jsx'\r\n\r\nconst Profile = (props) => {\r\n    \r\n    return (\r\n        <div>\r\n            <ProfileInfo saveProfile={props.saveProfile} savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport Profile from './Profile';\r\nimport * as axios from 'axios';\r\nimport {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile} from '../../redux/profileReducer';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\nimport {usersAPI} from '../../api/api'\r\nimport {withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport {compose} from 'redux';\r\n\r\nclass ProfileContainer extends React.Component{\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        \r\n        return (\r\n            <Profile {...this.props} savePhoto={this.props.savePhoto} isOwner={!this.props.match.params.userId} profile={this.props.profile} status={this.props.status} updateStatus = {this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}