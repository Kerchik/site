{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","Object","C_Users_PC_Desktop_React_my_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_PC_Desktop_React_my_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_PC_Desktop_React_my_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","C_Users_PC_Desktop_React_my_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_PC_Desktop_React_my_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","React","connect","module","exports","descriptionBlock","postsBlock","posts","item","Post","react_default","className","s","src","alt","message","likesCount","MyPosts","memo","console","log","postsElements","map","p","MyPosts_Post_Post","id","createRef","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","MyPostsContainer","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileInfo","_ref","profile","photos","large","userPhoto","ProfileInfo_ProfileStatusWithHooks","PreLoader","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","components_Profile_Profile","assign","compose","withRouter"],"mappings":"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","file":"static/js/3.74a7c7bf.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />\r\n            \r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    \r\n    \r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1UiMl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__OPhx6\",\"posts\":\"MyPosts_posts__1Sk5I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1_1_H\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n       <div className={s.item}>\r\n            <img src=\"https://i1.i.ua/prikol/pic/4/7/418574.jpg\" alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n \r\n    )\r\n}\r\n \r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post.jsx';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from '../../../redux/profileReducer';\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport {required, maxLengthCreator} from '../../../utils/validators/validators'\r\nimport {Textarea} from '../../common/FormsControl/FormsControl'\r\n\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n     console.log('asdf')\r\n     let postsElements =\r\n         props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id}/>);\r\n\r\n     let newPostElement = React.createRef();\r\n\r\n\r\n     let onAddPost = (values) => {\r\n             props.addPost(values.newPostText);\r\n         };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\nconst maxLength10 = maxLengthCreator(10);\r\nlet AddNewPostForm = (props) => {\r\n   return (\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} validate={[required, maxLength10]} placeholder=\"Write something\"/>\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n   )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addPostActionCreator} from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    \r\n    return {\r\n        \r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContainer;","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value,\r\n        });\r\n        \r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n        console.log('c');\r\n    }\r\n\r\n    render() {\r\n    return (\r\n        <div>\r\n            {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick= {this.activateEditMode}>{!this.props.status ? '---' : this.props.status}</span>\r\n                </div>\r\n            }\r\n            {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React,{useState, useEffect} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    \r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status] )\r\n    \r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{status || '---'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport PreLoader from '../../common/preloader/PreLoader'\r\nimport userPhoto from '../../../assets/images/user.png'\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\n\r\n\r\nconst ProfileInfo = ({profile, updateStatus, status}) => {\r\n   if (!profile) {\r\n       return <PreLoader />\r\n   }\r\n    \r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n               <img src={profile.photos.large != null ? profile.photos.large : userPhoto}/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from './MyPosts/MyPosts.jsx'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer.jsx'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo.jsx'\r\n\r\nconst Profile = (props) => {\r\n    \r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport Profile from './Profile';\r\nimport * as axios from 'axios';\r\nimport {getUserProfile, getStatus, updateStatus} from '../../redux/profileReducer';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\nimport {usersAPI} from '../../api/api'\r\nimport {withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport {compose} from 'redux';\r\n\r\nclass ProfileContainer extends React.Component{\r\n    \r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    \r\n    render() {\r\n        \r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus = {this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}