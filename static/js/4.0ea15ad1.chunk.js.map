{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItems","active","messages","message","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","Object","C_Users_PC_Desktop_React_my_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_PC_Desktop_React_my_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_PC_Desktop_React_my_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","C_Users_PC_Desktop_React_my_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_PC_Desktop_React_my_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","React","connect","DialogItem","path","id","react_default","className","s","dialog","react_router_dom","name","Message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","messagesElements","map","m","Dialogs_Message_Message","dialogsElements","d","Dialogs_DialogItem_DialogItem","newMessageBody","values","sendMessage","react_router","compose","dispatch","sendMessageCreator"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,wKCGdC,EAA6B,SAACC,GAAD,MAAY,CACrCC,OAAQD,EAAME,KAAKD,SAGdE,EAAmB,SAACC,GAAc,IACrCC,EADqC,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAGnC,OAAKR,KAAKS,MAAMjB,OAETkB,EAAAC,EAAAC,cAACjB,EAAcK,KAAKS,OAFIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,eAHTlB,EAAA,CACXmB,IAAMpB,WAWtC,OADqCqB,YAAQ1B,EAAR0B,CAAoCpB,mGCN9DqB,EATI,SAACR,GAChB,IAAIS,EAAO,YAAcT,EAAMU,GAC/B,OACIC,EAAAT,EAAAC,cAAA,OAAKS,UAAWC,IAAEC,OAAS,IAAMD,IAAEnC,QAC/BiC,EAAAT,EAAAC,cAACY,EAAA,EAAD,CAASV,GAAII,GAAb,IAAqBT,EAAMgB,QCUxBC,EAbC,SAACjB,GAIb,OAEIW,EAAAT,EAAAC,cAAA,OAAKS,UAAWC,IAAEC,QAASd,EAAMpB,mDCkCnCsC,EAAcC,YAAiB,IAc/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,CAbL,SAACrB,GACpB,OACIW,EAAAT,EAAAC,cAAA,QAAMoB,SAAUvB,EAAMwB,cAClBb,EAAAT,EAAAC,cAAA,WACIQ,EAAAT,EAAAC,cAACsB,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAAcF,KAAK,iBAAiBc,YAAY,wBAErGnB,EAAAT,EAAAC,cAAA,WACIQ,EAAAT,EAAAC,cAAA,0BAQD4B,EAlDC,SAAC/B,GACb,IAAIlB,EAAQkB,EAAMgC,YAEdC,EAAmBnD,EAAMH,SACxBuD,IAAI,SAAAC,GAAC,OAAIxB,EAAAT,EAAAC,cAACiC,EAAD,CAASxD,QAASuD,EAAEvD,QAASkB,IAAKqC,EAAEzB,OAE9C2B,EAAkBvD,EAAMN,QACvB0D,IAAK,SAAAI,GAAC,OAAI3B,EAAAT,EAAAC,cAACoC,EAAD,CAAYvB,KAAMsB,EAAEtB,KAAMlB,IAAKwC,EAAE5B,GAAIA,GAAI4B,EAAE5B,OAErC5B,EAAM0D,eAO3B,OAAKxC,EAAMjB,OAIH4B,EAAAT,EAAAC,cAAA,OAAKS,UAAWC,IAAErC,SACdmC,EAAAT,EAAAC,cAAA,OAAKS,UAAWC,IAAEpC,cACb4D,GAEL1B,EAAAT,EAAAC,cAAA,OAAKS,UAAWC,IAAElC,UACdgC,EAAAT,EAAAC,cAAA,WACK8B,GAELtB,EAAAT,EAAAC,cAACiB,EAAD,CAAqBG,SAjBjB,SAACkB,GACjBzC,EAAM0C,YAAYD,EAAOD,qBAIH7B,EAAAT,EAAAC,cAACwC,EAAA,EAAD,CAAUtC,GAAM,oCCL/BuC,sBACXrC,YAfkB,SAACzB,GACnB,MAAO,CACJkD,YAAalD,EAAMkD,cAID,SAACa,GACtB,MAAO,CACJH,YAAa,SAACF,GACVK,EAASC,YAAmBN,QAOnCvD,IAFW2D,CAGbb","file":"static/js/4.0ea15ad1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3WHp7\",\"dialogsItems\":\"Dialogs_dialogsItems__gjjlv\",\"active\":\"Dialogs_active__xJOSX\",\"messages\":\"Dialogs_messages__XGZGj\",\"message\":\"Dialogs_message__22a3V\"};","import React from 'react'\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />\r\n            \r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    \r\n    \r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\nimport { NavLink} from 'react-router-dom'\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}> {props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogItem;","import React from 'react'\r\nimport s from '../Dialogs.module.css'\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    \r\n    \r\n    \r\n    return (\r\n        \r\n        <div className={s.dialog}>{props.message}</div>\r\n        \r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport { NavLink} from 'react-router-dom'\r\nimport { Redirect} from 'react-router-dom'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport {updateNewMessageBodyCreator, sendMessageCreator} from '../../redux/dialogsReducer'\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport {maxLengthCreator, required} from '../../utils/validators/validators'\r\nimport {Textarea} from '../common/FormsControl/FormsControl'\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    \r\n    let messagesElements = state.messages\r\n        .map(m => <Message message={m.message} key={m.id}/>);\r\n   \r\n    let dialogsElements = state.dialogs\r\n        .map( d => <DialogItem name={d.name} key={d.id} id={d.id}/>)\r\n    \r\n    let newMessageBody = state.newMessageBody;\r\n    \r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n   \r\n    \r\n    if (!props.isAuth) return <Redirect to = {\"/login\"}/>\r\n    \r\n    return (\r\n        \r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    <div>\r\n                        {messagesElements}\r\n                    </div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        \r\n    )\r\n}\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]} name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport Dialogs from './Dialogs'\r\nimport {sendMessageCreator} from '../../redux/dialogsReducer'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom';\r\nimport {withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n       dialogsPage: state.dialogsPage,\r\n       \r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n       sendMessage: (newMessageBody) => {\r\n           dispatch(sendMessageCreator(newMessageBody));\r\n       }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}